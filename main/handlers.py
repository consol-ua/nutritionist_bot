# handlers.py
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from datetime import datetime
from database import db
from sheets_export import export_users_to_sheet
from dotenv import load_dotenv
import os


load_dotenv()

# –°—Ç–∞–Ω–∏ –¥–ª—è ConversationHandler
WAITING_FOR_SHEET_URL = 1

# –û—Ç—Ä–∏–º—É—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –≤—ñ–¥–µ–æ –∑ env
VIDEO_FILE_ID = os.getenv('VIDEO_FILE_ID')

async def showWelcomeMessage(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_message = "üëã –¶–µ –±–æ—Ç –¥–ª—è –≤–µ–¥–µ–Ω–Ω—è –¥—ñ—î—Ç–∏ —Ç–∞ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è"
    
    await update.message.reply_text(welcome_message)
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–µ–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î VIDEO_FILE_ID
    if VIDEO_FILE_ID:
        try:
            await update.message.reply_video(video=VIDEO_FILE_ID, caption="–ü–æ–¥–∏–≤—ñ—Ç—å—Å—è —Ü–µ –≤—ñ–¥–µ–æ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –Ω–∞—à —Å–µ—Ä–≤—ñ—Å")
            # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è –ø—ñ—Å–ª—è –≤—ñ–¥–µ–æ
            survey_keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton("üìù –ü—Ä–æ–π—Ç–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è", callback_data="start_survey")]
            ])
            await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø—Ä–æ–π–¥—ñ—Ç—å –∫–æ—Ä–æ—Ç–∫–µ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è:", reply_markup=survey_keyboard)
        except Exception as e:
            await update.message.reply_text("–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–µ–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
    

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, command_data: str = None):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é —Ç–∞ –∫–æ–º–∞–Ω–¥"""
    if command_data:
        # –Ø–∫—â–æ —Ü–µ –∫–æ–º–∞–Ω–¥–∞
        message = update.message
        if command_data == "personal_cabinet":
            keyboard = [
                [InlineKeyboardButton("üîµ –ì—ñ–ø–æ—Ç–∏—Ä–µ–æ–∑", callback_data="hypothyroidism")],
                [InlineKeyboardButton("üü£ –Ü–Ω—Å—É–ª—ñ–Ω–æ—Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å", callback_data="insulin_resistance")],
                [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]
            await message.reply_text("üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", reply_markup=InlineKeyboardMarkup(keyboard))
        elif command_data == "contact_menu":
            keyboard = [
                [InlineKeyboardButton("üì± Telegram", callback_data="telegram_contact")],
                [InlineKeyboardButton("üì∏ Instagram", callback_data="instagram_contact")],
                [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]
            await message.reply_text("üì± –ó–≤'—è–∑–æ–∫ –∑—ñ –º–Ω–æ—é", reply_markup=InlineKeyboardMarkup(keyboard))
        return

    # –Ø–∫—â–æ —Ü–µ callback –≤—ñ–¥ –∫–Ω–æ–ø–∫–∏
    query = update.callback_query
    await query.answer()
    
    # –Ø–∫—â–æ —Ü–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è
    if query.data == "start_survey":
        await start_survey(update, context)
        return
    elif query.data.startswith("survey_"):
        await handle_survey_response(update, context)
        return
    
    if query.data == "personal_cabinet":
        keyboard = [
            [InlineKeyboardButton("üîµ –ì—ñ–ø–æ—Ç–∏—Ä–µ–æ–∑", callback_data="hypothyroidism")],
            [InlineKeyboardButton("üü£ –Ü–Ω—Å—É–ª—ñ–Ω–æ—Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å", callback_data="insulin_resistance")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        await query.edit_message_text("üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", reply_markup=InlineKeyboardMarkup(keyboard))
    
    elif query.data == "contact_menu":
        keyboard = [
            [InlineKeyboardButton("üì± Telegram", callback_data="telegram_contact")],
            [InlineKeyboardButton("üì∏ Instagram", callback_data="instagram_contact")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        await query.edit_message_text("üì± –ó–≤'—è–∑–æ–∫ –∑—ñ –º–Ω–æ—é", reply_markup=InlineKeyboardMarkup(keyboard))
    
    elif query.data == "hypothyroidism":
        keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="personal_cabinet")]
        ]
        await query.edit_message_text("üîµ –ì—ñ–ø–æ—Ç–∏—Ä–µ–æ–∑\n\nüîú –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–µ–∑–∞–±–∞—Ä–æ–º!", reply_markup=InlineKeyboardMarkup(keyboard))
        
    elif query.data == "insulin_resistance":
        keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="personal_cabinet")]
        ]
        await query.edit_message_text("üü£ –Ü–Ω—Å—É–ª—ñ–Ω–æ—Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å\n\nüîú –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–µ–∑–∞–±–∞—Ä–æ–º!", reply_markup=InlineKeyboardMarkup(keyboard))
        
    elif query.data == "telegram_contact":
        keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="contact_menu")]
        ]
        await query.edit_message_text("üì± –ú—ñ–π Telegram: @myTelegramAccount", reply_markup=InlineKeyboardMarkup(keyboard))
        
    elif query.data == "instagram_contact":
        keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="contact_menu")]
        ]
        text = "üì∏ –ú—ñ–π Instagram: [nutritionist_svitlana_marchyk](https://www.instagram.com/nutritionist_svitlana_marchyk)"
        await query.edit_message_text(text, parse_mode='Markdown', reply_markup=InlineKeyboardMarkup(keyboard))
        
    elif query.data == "export":
        await export_users(update, context)
        
    elif query.data == "back_to_main":
        keyboard = [
            [InlineKeyboardButton("üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", callback_data="personal_cabinet")],
            [InlineKeyboardButton("üì± –ó–≤'—è–∑–æ–∫ –∑—ñ –º–Ω–æ—é", callback_data="contact_menu")],
            [InlineKeyboardButton("üìä –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", callback_data="export")]
        ]
        await query.edit_message_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=InlineKeyboardMarkup(keyboard))

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /start.  –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –≤ –±–∞–∑—ñ, –≤—ñ—Ç–∞—î –π–æ–≥–æ,
    —ñ–Ω–∞–∫—à–µ –ø—Ä–æ–ø–æ–Ω—É—î –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É.
    """
    user = update.effective_user

    if db.user_exists(user.id):
        # –°—Ç–≤–æ—Ä—é—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        keyboard = [
            [KeyboardButton("üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç")],
            [KeyboardButton("üì± –ó–≤'—è–∑–æ–∫ –∑—ñ –º–Ω–æ—é")],
            [KeyboardButton("üìä –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")]
        ]
        await update.message.reply_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))
    else:
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
        button = KeyboardButton("üì± –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä", request_contact=True)
        keyboard = ReplyKeyboardMarkup([[button]], resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text(
            "–©–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å, –Ω–∞–¥—ñ—à–ª–∏, –±—É–¥—å –ª–∞—Å–∫–∞, —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:",
            reply_markup=keyboard
        )

async def contact_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–ª—è—î –æ—Ç—Ä–∏–º–∞–Ω–∏–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É.
    –î–æ–¥–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ, —è–∫—â–æ –π–æ–≥–æ —Ç–∞–º —â–µ –Ω–µ–º–∞—î, —Ç–∞ –≤—ñ—Ç–∞—î –π–æ–≥–æ.
    """
    user = update.effective_user
    contact = update.message.contact

    if contact and contact.user_id == user.id:
        phone = contact.phone_number
        
        if not db.user_exists(user.id):
            user_data = {
                'user_id': user.id,
                'first_name': user.first_name or "",
                'last_name': user.last_name or "",
                'username': f"@{user.username}" if user.username else "",
                'phone': phone,
                'created_at': datetime.now()
            }
            db.add_user(user_data)
                        
            # –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è
            await update.message.reply_text("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!", reply_markup=ReplyKeyboardRemove())

            await showWelcomeMessage(update, context)
        else:
            await update.message.reply_text("–¢–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π üòä", reply_markup=ReplyKeyboardRemove())
    else:
        await update.message.reply_text("‚ö†Ô∏è –ú–æ–∂–Ω–∞ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Å–≤—ñ–π –∫–æ–Ω—Ç–∞–∫—Ç.")

async def export_users(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–ø–∏—Ç—É—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–∞–±–ª–∏—Ü—é –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É"""
    if update.callback_query:
        await update.callback_query.message.reply_text("üîó –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Sheets —Ç–∞–±–ª–∏—Ü—é, –∫—É–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –µ–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ:")
    else:
        await update.message.reply_text("üîó –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Sheets —Ç–∞–±–ª–∏—Ü—é, –∫—É–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –µ–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ:")
    return WAITING_FOR_SHEET_URL

async def handle_sheet_url(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–ª—è—î –æ—Ç—Ä–∏–º–∞–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–∞–±–ª–∏—Ü—é —Ç–∞ –≤–∏–∫–æ–Ω—É—î –µ–∫—Å–ø–æ—Ä—Ç"""
    sheet_url = update.message.text
    
    try:
        result = export_users_to_sheet(sheet_url)
        await update.message.reply_text(result)
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ: {str(e)}")
    
    return ConversationHandler.END

# –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –ø–∞–Ω–µ–ª—ñ —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É"""
    text = update.message.text
    
    if text == "üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç":
        keyboard = [
            [InlineKeyboardButton("üîµ –ì—ñ–ø–æ—Ç–∏—Ä–µ–æ–∑", callback_data="hypothyroidism")],
            [InlineKeyboardButton("üü£ –Ü–Ω—Å—É–ª—ñ–Ω–æ—Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å", callback_data="insulin_resistance")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        await update.message.reply_text("üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", reply_markup=InlineKeyboardMarkup(keyboard))
    
    elif text == "üì± –ó–≤'—è–∑–æ–∫ –∑—ñ –º–Ω–æ—é":
        keyboard = [
            [InlineKeyboardButton("üì± Telegram", callback_data="telegram_contact")],
            [InlineKeyboardButton("üì∏ Instagram", callback_data="instagram_contact")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        await update.message.reply_text("üì± –ó–≤'—è–∑–æ–∫ –∑—ñ –º–Ω–æ—é", reply_markup=InlineKeyboardMarkup(keyboard))
    
    elif text == "üìä –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤":
        await export_users(update, context)

async def start_survey(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—á–∞—Ç–æ–∫ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è"""
    query = update.callback_query
    await query.answer()
    
    # –ü–∏—Ç–∞–Ω–Ω—è 1
    keyboard = [
        [InlineKeyboardButton("–¢–∞–∫", callback_data="survey_q1_yes")],
        [InlineKeyboardButton("–ù—ñ", callback_data="survey_q1_no")]
    ]
    await query.edit_message_text(
        "–ü–∏—Ç–∞–Ω–Ω—è 1/3:\n–ß–∏ —î —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —â–∏—Ç–æ–≤–∏–¥–Ω–æ—é –∑–∞–ª–æ–∑–æ—é?",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_survey_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è"""
    query = update.callback_query
    await query.answer()
    
    data = query.data
    
    if data.startswith("survey_q1"):
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–µ—Ä—à–µ –ø–∏—Ç–∞–Ω–Ω—è
        context.user_data['q1'] = "–¢–∞–∫" if data.endswith("yes") else "–ù—ñ"
        
        # –ü–∏—Ç–∞–Ω–Ω—è 2
        keyboard = [
            [InlineKeyboardButton("–¢–∞–∫", callback_data="survey_q2_yes")],
            [InlineKeyboardButton("–ù—ñ", callback_data="survey_q2_no")]
        ]
        await query.edit_message_text(
            "–ü–∏—Ç–∞–Ω–Ω—è 2/3:\n–ß–∏ —î —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º–∏ –∑ –≤–∞–≥–æ—é?",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    
    elif data.startswith("survey_q2"):
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –¥—Ä—É–≥–µ –ø–∏—Ç–∞–Ω–Ω—è
        context.user_data['q2'] = "–¢–∞–∫" if data.endswith("yes") else "–ù—ñ"
        
        # –ü–∏—Ç–∞–Ω–Ω—è 3
        keyboard = [
            [InlineKeyboardButton("–¢–∞–∫", callback_data="survey_q3_yes")],
            [InlineKeyboardButton("–ù—ñ", callback_data="survey_q3_no")]
        ]
        await query.edit_message_text(
            "–ü–∏—Ç–∞–Ω–Ω—è 3/3:\n–ß–∏ –¥–æ—Ç—Ä–∏–º—É–≤–∞–ª–∏—Å—å –≤–∏ —Ä–∞–Ω—ñ—à–µ –¥—ñ—î—Ç–∏?",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    
    elif data.startswith("survey_q3"):
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ç—Ä–µ—Ç—î –ø–∏—Ç–∞–Ω–Ω—è
        context.user_data['q3'] = "–¢–∞–∫" if data.endswith("yes") else "–ù—ñ"
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ñ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        results = (
            "‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ!\n\n"
            f"1. –ü—Ä–æ–±–ª–µ–º–∏ –∑—ñ —â–∏—Ç–æ–≤–∏–¥–Ω–æ—é –∑–∞–ª–æ–∑–æ—é: {context.user_data['q1']}\n"
            f"2. –ü—Ä–æ–±–ª–µ–º–∏ –∑ –≤–∞–≥–æ—é: {context.user_data['q2']}\n"
            f"3. –î–æ—Å–≤—ñ–¥ –¥–æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥—ñ—î—Ç–∏: {context.user_data['q3']}"
        )
        
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", callback_data="personal_cabinet")],
            [InlineKeyboardButton("üì± –ó–≤'—è–∑–æ–∫ –∑—ñ –º–Ω–æ—é", callback_data="contact_menu")],
            [InlineKeyboardButton("üìä –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", callback_data="export")]
        ]
        await query.edit_message_text(f"{results}\n\n–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=InlineKeyboardMarkup(keyboard))